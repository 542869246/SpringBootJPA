#配置端口号
service.port=8080
#spring-boot的日志输出默认是多彩形式,会根据你电脑自身支持不支持来判断,当然也可以在application.properties中配置
#NEVER：禁用ANSI-colored输出（默认项） 
#DETECT：会检查终端是否支持ANSI，是的话就采用彩色输出（推荐项） 
#ALWAYS：总是使用ANSI-colored格式输出，若终端不支持的时候，会有很多干扰信息，不推荐使用
spring.output.ansi.enabled=DETECT
#spring-boot默认显示info级别及其以上的日志,你可以使用
logging.config=classpath:logback-boot.xml
#logging.level.root = debug
#logging.level.com.xiaofangtech.sunt.controller = debug  
#logging.level.com.xiaofangtech.sunt.helper = warn  
#写入log文件
#logging.file=my.log
#http请求的字符编码s
spring.http.encoding.charset=UTF-8
#设置文件上传时单个文件的大小限制
#spring.http.multipart.max-file-size=10MB
#设置文件上传时总文件大小限制
#spring.http.multipart.max-request-size=100MB
#设置静态资源的请求路径
spring.mvc.static-path-pattern=/**
#指定静态资源的路径
spring.resources.static-locations=classpath:/static/,classpath:/public/,classpath:/templates/
##以下是使用MySQL数据库的配置
#指定数据库方言
hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#是否显示sql语句
hibernate.show_sql=true
#设置使用Hibernate的自动建表方式
hibernate.hbm2dll.auto=update
#设置自动扫描的包前缀
entitymanager.packagesToScan=com.example.springbootjpa.pojo
spring.datasource.url=jdbc:mysql://localhost:3306/booksSystem
#数据库链接
useUnicode=true&characterEncoding=utf-8&useSSL=true&autoReconnect=true
#数据库用户名
spring.datasource.username=root
#数据库用户对应的密码
spring.datasource.password=ok
#数据库驱动名称
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
# mybatis.config= classpath:mybatis-config.xml
#设置别名
#mybatis.type-aliases-package=com.example.springbootdemo.pojo
#mybatis.mapper-locations=classpath:dao/*.xml
#jpa
#自动创建|更新|验证数据库表结构
spring.jpa.properties.hibernate.hbm2ddl.auto=update
#主要是指定生成表名的存储引擎为InneoDB
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
#是否打印出自动生产的SQL
spring.jpa.show-sql=true
##Thymeleaf配置模板
spring.thymeleaf.check-template=true
spring.thymeleaf.check-template-location=true
#在开发时建议将spring.thymeleaf.cache设置为false，否则会有缓存，导致页面没法及时看到更新后的效果
spring.thymeleaf.cache=false
#前缀
spring.thymeleaf.prefix=classpath:/templates/
#后缀
spring.thymeleaf.suffix=.html
spring.thymeleaf.mode=LEGACYHTML5
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.content-type=text/html
spring.resources.chain.strategy.content.enabled=true
spring.resources.chain.strategy.content.paths=/**
#thymeleaf end
#邮箱配置
#邮箱服务器地址
#163
spring.mail.host=smtp.163.com
#将这个参数设为true，让服务器进行认证,认证用户名和密码是否正确
mail.smtp.auth=true
#用户名
spring.mail.username=18851200889@163.com
#授权码
spring.mail.password=542869246zyf
#以谁来发送邮件时
mail.fromMail.addr=18851200889@163.com
#qq
#spring.mail.host=smtp.exmail.qq.com
#mail.smtp.port=465
#mail.smtp.auth=true
#spring.mail.username=542869246@qq.com
#spring.mail.password=hyzcnxubndxzbfcj
#mail.fromMail.addr=542869246@qq.com
#spring.mail.default-encoding=UTF-8
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true
#multipart
#默认支持文件上传.
spring.http.multipart.enabled=true
#支持文件写入磁盘.
spring.http.multipart.file-size-threshold=0
# 上传文件的临时目录
#spring.http.multipart.location=static
# 最大支持文件大小
spring.http.multipart.max-file-size=102400Mb
# 最大支持请求大小
spring.http.multipart.max-request-size=1024000Mb

#Actuator监控
#关闭安全认证
management.security.enabled=false
#管理端口调整成8088
management.port=8088
#actuator的访问路径
#代表启用单独的url地址来监控Spring Boot应用，为了安全一般都启用独立的端口来访问后端的监控信息
management.context-path=/monitor
#启用接口关闭Spring Boot
endpoints.shutdowm.enable=true
info.app.name=spring-boot-actuator
info.app.version=1.0.0
#
##设置用户名
#security.user.name=root
##设置密码
#security.user.password=root
security.user.name=admin
security.user.password=123456














